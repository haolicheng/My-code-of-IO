for (i=1; i<=n; i++) s[i]=s[i-1]+a[i];
for (x=1; x<=n; x++)
  for (y=x; y<=n; y++)
    if (x+k<=y && y+k-1<=n)
      ans=max(ans,s[x+k-1]-s[x-1] + s[y+k-1]-s[y-1]);
cout<<ans;

//f[i] 右端点<=i最大的区间
//g[i] 左端点>=i最大的区间
for (i=k; i<=n; i++)
  f[i]=max(f[i-1],s[i]-s[i-k]);
for (i=n-k+1; i>=1; i--)
  g[i]=max(g[i+1],s[i+k-1]-s[i-1]);
for (i=k; i<n-k+1; i++)
  ans=max(ans,f[i]+g[i+1]);

当n是正数，答案是正数（某一位-1，它之后的位数+2，并且满足最大），答案是负数（写上负号之后，只需让位数之和满足条件，并且这个数最大即可）

当n是负数，存在一位不是9，每一位都是9

枚举某些人躺过来之后，身高最高的人是多少

给定一张带边权的无向图，双方博弈轮流选一个没被选过的点，如果一条边连接的两个点同时被一个人选，那么他会得到这个边权的收益，每个人都想让自己的收益-对方的收益尽可能大，并且都选择最优策略，问最终先手收益-后手收益等于多少
阿狸和桃子的游戏

加血怪，扣血怪

先打加血怪，再打扣血怪

加血怪按什么顺序打，扣血怪又按什么顺序打

按照扣的血从小到大排      按加的血从大到小排


有怪兽不掉血瓶，放最后

有怪兽打完之后只回1滴血，放在倒数第二批次

                  2滴血，         三

#include <bits/stdc++.h>
using namespace std;
int k,x,y,a[1005][1005],cnt,A;
void fz(int u,int d,int l,int r)
{
	if (u==d && l==r) return;
	
	int midx=(u+d)/2;
	int midy=(l+r)/2;
	int X,Y;
	for (int i=u; i<=d; i++)
	  for (int j=l; j<=r; j++)
	    if (a[i][j]>0) X=i,Y=j;
	cnt++;
	if (X<=midx && Y<=midy) a[midx][midy+1]=a[midx+1][midy]=a[midx+1][midy+1]=cnt;
	if (X>midx && Y<=midy) a[midx][midy]=a[midx][midy+1]=a[midx+1][midy+1]=cnt;
	if (X<=midx && Y>midy) a[midx][midy]=a[midx+1][midy]=a[midx+1][midy+1]=cnt;
	if (X>midx && Y>midy) a[midx][midy]=a[midx][midy+1]=a[midx+1][midy]=cnt;
	
	
	fz(u,midx,l,midy);
	fz(midx+1,d,l,midy);
	fz(u,midx,midy+1,r);
	fz(midx+1,d,midy+1,r);
}
int main()
{
	cin>>k;
	cin>>x>>y;
	a[x][y]=1; cnt=1;
	fz(1,1<<k,1,1<<k);
	for (int i=1; i<=(1<<k); i++)
	{
		for (int j=1; j<=(1<<k); j++)
		  printf("%3d",a[i][j]);
		cout<<endl;
	}
}